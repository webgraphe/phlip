#!/usr/bin/env php
<?php

namespace Webgraphe\Phlip;

$autoloadFiles = [__DIR__ . '/../../autoload.php', __DIR__ . '/../vendor/autoload.php', __DIR__ . '/vendor/autoload.php'];
foreach ($autoloadFiles as $autoloadFile) {
    if (file_exists($autoloadFile)) {
        define('PHLIP_AUTOLOAD_FILE', $autoloadFile);
        break;
    }
}
unset($autoloadFile);
if (!defined('PHLIP_AUTOLOAD_FILE')) {
    fwrite(
        STDERR,
        'You need to set up the project dependencies using Composer:' . PHP_EOL
        . PHP_EOL
        . '    composer install' . PHP_EOL
        . PHP_EOL .
        'You can learn all about Composer on https://getcomposer.org/.' . PHP_EOL
    );
    die(1);
}
require PHLIP_AUTOLOAD_FILE;

$context = Phlipy::withRepl(Phlipy::bootstrap(), $options = Phlipy::optionsFromGlobals());

if (!empty($options['help'])) {
    echo <<<USAGE
Webgraphe Phlip

Usage:
    $ phlip [OPTIONS]
    $ phlip [OPTIONS] < FILENAME
    $ echo "phlip script" | phlip [OPTIONS]

  Options:
    --help ···························· Displays usage
    --colors ·························· Toggles CLI colors
    --json-alike ······················ Toggles JSON-alike output
    --return-types ···················· Toggles display of return types
    --verbose ························· Toggles more verbose output
    --read.prompt= ···················· Replaces the prompt (defaults to "phlip [%TICKS%] > ")
    --read.multi-line ················· Toggles support to capture multi-lines (hit ENTER twice to submit forms)


USAGE;
    exit(0);
}

try {
    // Phlip script injected from the input
    if (false !== ftell(STDIN)) {
        $context->define('stdin', trim(file_get_contents('php://stdin')));
        Program::parse('(print (eval stdin))')->execute($context);

        exit(0);
    }

    // Interactive REPL prompt
    echo 'Webgraphe Phlip' . PHP_EOL;
    echo "Type (exit) to quit." . PHP_EOL . PHP_EOL;
    Program::parse('(loop (print (eval (read))))')->execute($context);
} catch (\Throwable $exception) {
    echo "Webgraphe Phlip FATAL ERROR: " . PHP_EOL;
    while ($exception) {
        echo '- ' . get_class($exception) . ': ' . $exception->getMessage() . PHP_EOL;
        $exception = $exception->getPrevious();
    }
    exit(1);
}
