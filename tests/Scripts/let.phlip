(test "Let tests"
    ; Re-set ticker to use a variable in a lexical closure instead
    (let
        (
            (x 0)
            ((plus-1 x) (+ x 1))
        )
        (define (ticker) (set x (plus-1 x)) x)
    )

    (assert (! (defined? x)))
    (assert (= (ticker) 1))
    (define x 0)
    (assert (defined? x))
    (assert (= (ticker) 2))
    (assert (= x 0))

    ; A program SHOULD only contain expression list, however an atom is accepted if it's the last evaluable expression
    "\tThis program has ended\r\n"

    ; There can be comments after the last evaluable expression
)
